/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'sina' at '9/26/16 10:01 AM' with Gradle 3.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

def profiles = 'dev'

// In this section you declare where to find the dependencies of your project
buildscript {
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
    }
    repositories {
        jcenter()
    }
}
apply plugin: 'spring-boot'

repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven { url "http://repo.spring.io/libs-snapshot" }
//    maven.url "http://repo.spring.io/snapshot"
//    maven.url "http://repo.spring.io/milestone"
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile group: 'org.springframework', name: 'spring-test', version: '4.3.3.RELEASE'
    // Use TestNG framework, also requires calling test.useTestNG() below
    testCompile 'org.testng:testng:6.9.12'
    testCompile "org.mockito:mockito-all:1.+"
}

test.useTestNG()


bootRun {
        args = ["--spring.profiles.active=" + profiles]
}
